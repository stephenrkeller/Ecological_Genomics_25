@ Aligning 2505_36_O...
Looking to launch executable "/gpfs1/sw/rh9/pkgs/bwa-mem2/2.2.1/bwa-mem2.avx2", simd = .avx2
Launching executable "/gpfs1/sw/rh9/pkgs/bwa-mem2/2.2.1/bwa-mem2.avx2"
-----------------------------
Executing in AVX2 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: /gpfs1/cl/ecogen/pbio6800/PopulationGenomics/ref_genome/Pmariana/Pmariana1.0-genome_reduced.fa
* Entering FMI_search
* Index file found. Loading index from /gpfs1/cl/ecogen/pbio6800/PopulationGenomics/ref_genome/Pmariana/Pmariana1.0-genome_reduced.fa.bwt.2bit.64
* Reference seq len for bi-index = 5855199825
* sentinel-index: 2317116625
* Count:
0,	1
1,	1783324060
2,	2927599913
3,	4071875766
4,	5855199825

* Reading other elements of the index from files /gpfs1/cl/ecogen/pbio6800/PopulationGenomics/ref_genome/Pmariana/Pmariana1.0-genome_reduced.fa
* Index prefix: /gpfs1/cl/ecogen/pbio6800/PopulationGenomics/ref_genome/Pmariana/Pmariana1.0-genome_reduced.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = /gpfs1/cl/ecogen/pbio6800/PopulationGenomics/ref_genome/Pmariana/Pmariana1.0-genome_reduced.fa.0123
* Reference genome size: 5855199824 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 557.3706 MB
2. Memory pre-allocation for BSW: 958.4681 MB
3. Memory pre-allocation for BWT: 309.2567 MB
------------------------------------------
* Threads used (compute): 4
* No. of pipeline threads: 2

[0000] read_chunk: 40000000, work_chunk_size: 40000156, nseq: 293092
	[0000][ M::kt_pipeline] read 293092 sequences (40000156 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 40000000, work_chunk_size: 40000250, nseq: 292900
	[0000][ M::kt_pipeline] read 292900 sequences (40000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2927599912, n: 293092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 61400, 52, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1384, 2040, 3072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6448)
[0000][PE] mean and std.dev: (1820.11, 1128.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (367, 467, 567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 967)
[0000][PE] mean and std.dev: (467.92, 149.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1167)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (402, 1059, 4047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11337)
[0000][PE] mean and std.dev: (2498.27, 2870.07)
[0000][PE] low and high boundaries for proper pairs: (1, 14982)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 293092 reads in 88.916 CPU sec, 22.371 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 40000000, work_chunk_size: 40000119, nseq: 293044
	[0000][ M::kt_pipeline] read 293044 sequences (40000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2927599912, n: 292900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 61394, 44, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 4124, 5870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16802)
[0000][PE] mean and std.dev: (3402.50, 2623.03)
[0000][PE] low and high boundaries for proper pairs: (1, 22268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (369, 469, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 969)
[0000][PE] mean and std.dev: (469.98, 150.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1169)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (248, 1948, 5027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14585)
[0000][PE] mean and std.dev: (2592.32, 2620.04)
[0000][PE] low and high boundaries for proper pairs: (1, 19364)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (379, 2176, 4650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13192)
[0000][PE] mean and std.dev: (2474.33, 1997.40)
[0000][PE] low and high boundaries for proper pairs: (1, 17463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 292900 reads in 88.921 CPU sec, 22.336 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 40000000, work_chunk_size: 40000257, nseq: 293004
	[0000][ M::kt_pipeline] read 293004 sequences (40000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2927599912, n: 293044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 61492, 58, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1835, 1970, 3072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5546)
[0000][PE] mean and std.dev: (1790.33, 957.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (370, 470, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 970)
[0000][PE] mean and std.dev: (470.33, 150.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1170)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (136, 1843, 5877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17359)
[0000][PE] mean and std.dev: (2943.43, 2978.17)
[0000][PE] low and high boundaries for proper pairs: (1, 23100)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 293044 reads in 89.617 CPU sec, 22.528 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 40000000, work_chunk_size: 40000183, nseq: 293756
	[0000][ M::kt_pipeline] read 293756 sequences (40000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2927599912, n: 293004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 61242, 35, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 2040, 4124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11436)
[0000][PE] mean and std.dev: (2192.05, 2199.37)
[0000][PE] low and high boundaries for proper pairs: (1, 15092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (368, 469, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 974)
[0000][PE] mean and std.dev: (469.22, 150.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1176)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (120, 2667, 7004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20772)
[0000][PE] mean and std.dev: (3464.40, 3252.44)
[0000][PE] low and high boundaries for proper pairs: (1, 27656)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 293004 reads in 89.568 CPU sec, 22.536 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 40000000, work_chunk_size: 40000119, nseq: 293772
	[0000][ M::kt_pipeline] read 293772 sequences (40000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2927599912, n: 293756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 61594, 55, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (369, 469, 568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 966)
[0000][PE] mean and std.dev: (469.43, 149.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1165)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (495, 1159, 4306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11928)
[0000][PE] mean and std.dev: (2532.11, 2593.81)
[0000][PE] low and high boundaries for proper pairs: (1, 15739)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1480, 2160, 4622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10906)
[0000][PE] mean and std.dev: (2786.16, 2255.72)
[0000][PE] low and high boundaries for proper pairs: (1, 14048)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 293756 reads in 89.514 CPU sec, 22.514 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 40000000, work_chunk_size: 40000246, nseq: 293952
	[0000][ M::kt_pipeline] read 293952 sequences (40000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2927599912, n: 293772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 61290, 47, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (827, 3790, 7403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20555)
[0000][PE] mean and std.dev: (3990.79, 3366.55)
[0000][PE] low and high boundaries for proper pairs: (1, 27131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (373, 472, 573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 973)
[0000][PE] mean and std.dev: (473.58, 149.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1173)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (223, 1655, 5209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15181)
[0000][PE] mean and std.dev: (2514.47, 2573.05)
[0000][PE] low and high boundaries for proper pairs: (1, 20167)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 2138, 3240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7760)
[0000][PE] mean and std.dev: (2325.82, 1666.17)
[0000][PE] low and high boundaries for proper pairs: (1, 10020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 293772 reads in 90.166 CPU sec, 22.690 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 40000000, work_chunk_size: 40000227, nseq: 293818
	[0000][ M::kt_pipeline] read 293818 sequences (40000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2927599912, n: 293952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 61344, 45, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1555, 1689, 6030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14980)
[0000][PE] mean and std.dev: (3093.64, 2515.95)
[0000][PE] low and high boundaries for proper pairs: (1, 19455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (374, 474, 576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 980)
[0000][PE] mean and std.dev: (475.86, 150.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1182)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (144, 1975, 5732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16908)
[0000][PE] mean and std.dev: (3025.04, 2876.14)
[0000][PE] low and high boundaries for proper pairs: (1, 22496)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1551, 2314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4982)
[0000][PE] mean and std.dev: (1550.71, 1115.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
